/*buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        //classpath 'org.akhikhl.gretty:gretty:+'
        //classpath 'com.bmuschko:gradle-tomcat-plugin:2.4.2'
    }
}*/

apply plugin: 'org.springframework.boot'
apply from: 'https://dl.bintray.com/scalding/generic/waroverlay.gradle'
apply from: 'https://raw.githubusercontent.com/apereo/cas/5.2.x/gradle/overrides.gradle'

apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'war'

//apply plugin: 'com.bmuschko.tomcat'
//apply plugin: 'com.bmuschko.tomcat-base'
//apply from: 'https://raw.githubusercontent.com/akhikhl/gretty/v2.0.0/pluginScripts/gretty.plugin'
//apply plugin: 'org.akhikhl.gretty'
//apply plugin: 'java'
//apply plugin: 'spring-boot'

configurations.compile {
    exclude group: "org.apache.directory.api", module: "api-ldap-schema-data"
}

eclipse {
    classpath {
        downloadSources = true
        downloadJavadoc = true
    }
}

idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

/*springBoot {
    mainClass = "org.springframework.boot.loader.WarLauncher"
}*/

springBoot {
    //mainClass = "org.ow2.proactive.iam.bootstrap.IAMApplication"
    mainClass = "org.apereo.cas.web.CasWebApplication"
}

bootRepackage {
    enabled = true
    mainClass = "org.apereo.cas.web.CasWebApplication"
    //mainClass = "org.ow2.proactive.iam.bootstrap.IAMApplication"
    executable = false
    excludeDevtools = true

}

bootRun {
    addResources = true
    classpath = sourceSets.main.compileClasspath
}

repositories {
    mavenCentral()
    jcenter()
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    maven { url 'https://build.shibboleth.net/nexus/content/repositories/releases/' }
}

dependencies {
    //providedRuntime "org.apereo.cas:cas-server-webapp-tomcat:${project.'cas.version'}@war"
    providedRuntime "org.apereo.cas:cas-server-webapp-jetty:${project.'cas.version'}@war"
    compile "org.apereo.cas:cas-server-webapp-init:${project.'cas.version'}"
    compile "org.apereo.cas:cas-server-support-ldap:${project.'cas.version'}"
    compile "org.apereo.cas:cas-server-support-json-service-registry:${project.'cas.version'}"

    //REST
    compile "org.apereo.cas:cas-server-support-rest:${project.'cas.version'}"
    //REST for JWT
    compile "org.apereo.cas:cas-server-support-rest-tokens:${project.'cas.version'}"
    //JWT
    compile "org.apereo.cas:cas-server-support-token-tickets:${project.'cas.version'}"

    //compile group: 'org.apache.directory.server', name: 'apacheds-all', version: '2.0.0-M24'
    compile group: 'org.apache.directory.api', name: 'api-all', version: '1.0.0'
    compile group: 'org.apache.directory.server', name: 'apacheds-core-api', version: '2.0.0-M24'
    compile group: 'org.apache.directory.server', name: 'apacheds-protocol-shared', version: '2.0.0-M24'
    compile group: 'org.apache.directory.server', name: 'apacheds-core-annotations', version: '2.0.0-M24'
    compile group: 'org.apache.directory.server', name: 'apacheds-protocol-ldap', version: '2.0.0-M24'

    compile group: 'org.projectlombok', name: 'lombok', version: '1.16.20'

    // https://mvnrepository.com/artifact/javax.servlet/javax.servlet-api
    compile group: 'javax.servlet', name: 'javax.servlet-api', version: '3.1.0'

    /*compile group: 'org.apache.tomcat', name: 'tomcat-coyote', version: '9.0.1'
    def tomcatVersion = '9.0.5'
    tomcat "org.apache.tomcat.embed:tomcat-embed-core:${tomcatVersion}",
            "org.apache.tomcat.embed:tomcat-embed-logging-juli:9.0.0.M6",
            "org.apache.tomcat.embed:tomcat-embed-jasper:${tomcatVersion}",
            "org.apache.tomcat:tomcat-coyote:9.0.5"*/
}

war {
    baseName 'iam'
    includeWarJars = true
    entryCompression = ZipEntryCompression.STORED

    //Remove default services from the registry
    exclude('**/Apereo-10000002.json')
    exclude('**/HTTPSandIMAPS-10000001.json')
    rootSpec.exclude("**/spring-boot-devtools-1.5.8.RELEASE.jar")

    manifest {
        attributes 'Start-Class': 'org.ow2.proactive.iam.bootstrap.IAMApplication'
    }
}

task explodeWar(type: Copy, group: "build", description: "Explodes the iam.war") {
    doLast {
        from zipTree(project.war.outputs.files.singleFile)
        into "${buildDir}/cas"
        println "CAS web application artifact exploded into [cas/build/cas]"
    }
}

task run(group: "build", description: "Run the CAS web application in embedded container mode") {
    dependsOn build
    doLast {
        def casRunArgs = Arrays.asList(project.'cas.run.jvmArgs'.split(" "))
        javaexec {
            main = "-jar"
            jvmArgs = casRunArgs
            args = ["build/libs/iam.war"]

            logger.info "Started ${commandLine}"
        }
    }
}

task debug(group: "build", description: "Debug the CAS web application in embedded mode on port 5005") {
    dependsOn build
    doLast {
        def casDebugArgs = Arrays.asList(project.'cas.debug.jvmArgs'.split(" "))
        javaexec {
            main = "-jar"
            jvmArgs = casDebugArgs
            args = ["build/libs/iam.war"]

            logger.info "Started ${commandLine}"
        }
    }
}

/*tomcat {
    httpPort = 8080
    httpsPort = 8443
    enableSSL = true
    contextPath = 'iam'

    //httpProtocol = 'org.apache.coyote.http11.Http11Nio2Protocol'
    //ajpProtocol  = 'org.apache.coyote.ajp.AjpNio2Protocol'

    users {
        user {
            username = 'user1'
            password = '123456'
            roles = ['developers', 'admin']
        }

        user {
            username = 'user2'
            password = 'abcdef'
            roles = ['manager']
        }
    }
}*/

/*gretty {
    httpsEnabled = true
    httpsPort = 8443
    httpPort = 8080
    contextPath = '/iam'
    servletContainer = 'jetty9'
   // springBoot = true
}*/
